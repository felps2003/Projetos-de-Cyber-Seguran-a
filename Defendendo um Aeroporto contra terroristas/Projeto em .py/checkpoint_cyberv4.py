# -*- coding: utf-8 -*-
"""CheckPoint_CyberV4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/felps2003/checkPoint_Cyber/blob/main/CheckPoint_CyberV4.ipynb

**IMPORTAÇÃO do Ngrok para simulação de um servidor**
"""

!pip install -q pyngrok

"""**IMPORTAÇÃO do framework Streamlit**"""

!pip install -q streamlit

!pip install -q streamlit_ace

"""**IMPORTAÇÃO da biblioteca FuzzyWuzzy**"""

!pip install fuzzywuzzy[speedup]

!streamlit run app.py &>/dev/null&

from pyngrok import ngrok

from fuzzywuzzy import process

"""Aqui esta o codigo base, nele tive que criar 3 funções:

1.   Função **names** para verificar os nomes, se é suspeito ou não.
2.   Função **verificacaoPassaporte** para verificar os numeros e as letras principais do pais do imigrante.
3.   Função **verificacao** que ira retornar o resultado se a pessoa pode entrar no pais, se ela é suspeita então deve ser presa e caso o pais não conste na base de dados ira aparecer um aviso. 

Quis fazer com que qualquer API que fosse colocada no **res** pudesse ser utilizada, sem precisar mudar as letras principais do codigo, então puxei o que foi escrito no match e caso seja verdadeiro ele ira copiar e então ficara no lugar no X como esse exemplo:

*   x = (api)
*   dict_api = res.json()[x]

Na parte dos nomes escolhi por utilizar o threshold de 80 pois utilizando um menor alguns nomes acabam por passar, e o iraque costuma sofrer com alguns ataques politicos terroristas, então achei melhor manter alto para remediar.

"""

# Commented out IPython magic to ensure Python compatibility.
%%writefile app.py
import streamlit as st
import re
import json
import requests as req
from fuzzywuzzy import process
from fuzzywuzzy import fuzz
from pyngrok import ngrok


res = requests.get('https://henricobela.github.io/fra.json')
nomes = req.get('https://cspinheiro.github.io/interpol.json')

def main():

  html_temp = """ 
  <div style ="background-color:red;padding:13px"> 
  <h1 style ="color:black;text-align:center;">Imigração para o Iraque</h1> 
  <h6 style ="color:white;text-align:center;">Por favor digite as três letra de identificação do pais</h6>
  <h6 style ="color:white;text-align:center;">e os numeros do passaporte</h6>
  </div> 
  """
  st.markdown(html_temp, unsafe_allow_html = True)
  names = st.text_input('Nome do imigrante')
  numPassaporte = st.text_input('Passaporte')

  def verificarNome(names):
    InterpolList = req.get('https://cspinheiro.github.io/interpol.json')
    lista_fuzzy = process.extract(names, InterpolList)
    resultado = []
    for sublista in lista_fuzzy:
        if sublista[1] > 80:
          resultado.append(sublista)
    if len(resultado) == 0:
        return True
    return False

  res = req.get('https://felps2003.github.io/irq.json')
  paises = ['irq','fra']
  def verificacaoPassaporte(numPassaporte):
    match = re.search('(?i)(\D{3})', numPassaporte.lower())
    api = (match[0])
    if api in paises:
      x = (api)
      dict_api = res.json()[x]
      for item in dict_api:
          for value in item.values():
            if str(numPassaporte) == str(x)+str(value):
              return False
      return True


  def verificacao(names,numPassaporte):
    imigrante = verificarNome(names)
    passaporte = verificacaoPassaporte(numPassaporte)
    if passaporte == False or imigrante == False:
      st.error('Prenda o individuo, possivel terrorista')
    elif passaporte == True and imigrante == True:
      st.success('Imigração permitida')
    else:
      st.warning('Não existe esse pais na base de dados')

  if st.button("Verificar"):
    verificacao(names,numPassaporte)

if __name__=='__main__':
    main()

!streamlit run app.py & npx localtunnel --port 8501